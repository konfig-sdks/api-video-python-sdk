# coding: utf-8

"""
    api.video

    api.video is an API that encodes on the go to facilitate immediate playback, enhancing viewer streaming experiences across multiple devices and platforms. You can stream live or on-demand online videos within minutes.

    The version of the OpenAPI document: 1
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING

from api_video_python_sdk.type.metadata import Metadata
from api_video_python_sdk.type.video_assets import VideoAssets
from api_video_python_sdk.type.video_source import VideoSource
from api_video_python_sdk.type.video_tags import VideoTags

class RequiredVideo(TypedDict):
    # The unique identifier of the video object.
    videoId: str

class OptionalVideo(TypedDict, total=False):
    tags: VideoTags

    # The title of the video content. 
    title: str

    # A description for the video content. 
    description: str

    # When a video was created, presented in ISO-8601 format.
    createdAt: datetime

    # The date and time the API created the video. Date and time are provided using ISO-8601 UTC format.
    publishedAt: datetime

    # The date and time the video was updated. Date and time are provided using ISO-8601 UTC format.
    updatedAt: datetime

    # Metadata you can use to categorise and filter videos. Metadata is a list of dictionaries, where each dictionary represents a key value pair for categorising a video. [Dynamic Metadata](https://api.video/blog/endpoints/dynamic-metadata/) allows you to define a key that allows any value pair. 
    metadata: typing.List[Metadata]

    source: VideoSource

    assets: VideoAssets

    # The id of the player that will be applied on the video. 
    playerId: str

    # Defines if the content is publicly reachable or if a unique token is needed for each play session. Default is true. Tutorials on [private videos](https://api.video/blog/endpoints/private-videos/). 
    public: bool

    # Defines if video is panoramic. 
    panoramic: bool

    # This lets you know whether mp4 is supported. If enabled, an mp4 URL will be provided in the response for the video. 
    mp4Support: bool

class Video(RequiredVideo, OptionalVideo):
    pass
