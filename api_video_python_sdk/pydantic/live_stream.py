# coding: utf-8

"""
    api.video

    api.video is an API that encodes on the go to facilitate immediate playback, enhancing viewer streaming experiences across multiple devices and platforms. You can stream live or on-demand online videos within minutes.

    The version of the OpenAPI document: 1
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from api_video_python_sdk.pydantic.live_stream_assets import LiveStreamAssets
from api_video_python_sdk.pydantic.restreams_response_object import RestreamsResponseObject

class LiveStream(BaseModel):
    # The unique identifier for the live stream. Live stream IDs begin with \"li.\"
    live_stream_id: str = Field(alias='liveStreamId')

    # Returns the list of RTMP restream destinations.
    restreams: typing.List[RestreamsResponseObject] = Field(alias='restreams')

    # The name of your live stream.
    name: typing.Optional[str] = Field(None, alias='name')

    # The unique, private stream key that you use to begin streaming.
    stream_key: typing.Optional[str] = Field(None, alias='streamKey')

    # Whether your video can be viewed by everyone, or requires authentication to see it. A setting of false will require a unique token for each view. Learn more about the Private Video feature [here](https://docs.api.video/delivery-analytics/video-privacy-access-management).
    public: typing.Optional[bool] = Field(None, alias='public')

    assets: typing.Optional[LiveStreamAssets] = Field(None, alias='assets')

    # The unique identifier for the player.
    player_id: typing.Optional[str] = Field(None, alias='playerId')

    # Whether or not you are broadcasting the live video you recorded for others to see. True means you are broadcasting to viewers, false means you are not.
    broadcasting: typing.Optional[bool] = Field(None, alias='broadcasting')

    # When the player was created, presented in ISO-8601 format.
    created_at: typing.Optional[datetime] = Field(None, alias='createdAt')

    # When the player was last updated, presented in ISO-8601 format.
    updated_at: typing.Optional[datetime] = Field(None, alias='updatedAt')
    class Config:
        arbitrary_types_allowed = True
