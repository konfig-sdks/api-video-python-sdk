# coding: utf-8

"""
    api.video

    api.video is an API that encodes on the go to facilitate immediate playback, enhancing viewer streaming experiences across multiple devices and platforms. You can stream live or on-demand online videos within minutes.

    The version of the OpenAPI document: 1
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel


class VideoStatusEncodingMetadata(BaseModel):
    # The width of the video in pixels.
    width: typing.Optional[typing.Optional[int]] = Field(None, alias='width')

    # The height of the video in pixels.
    height: typing.Optional[typing.Optional[int]] = Field(None, alias='height')

    # The number of bits processed per second.
    bitrate: typing.Optional[typing.Optional[typing.Union[int, float]]] = Field(None, alias='bitrate')

    # The length of the video.
    duration: typing.Optional[typing.Optional[int]] = Field(None, alias='duration')

    # The frequency with which consecutive images or frames appear on a display. Shown in this API as frames per second (fps).
    framerate: typing.Optional[typing.Optional[int]] = Field(None, alias='framerate')

    # How many samples per second a digital audio system uses to record an audio signal. The higher the rate, the higher the frequencies that can be recorded. They are presented in this API using hertz.
    samplerate: typing.Optional[typing.Optional[int]] = Field(None, alias='samplerate')

    # The method used to compress and decompress digital video. API Video supports all codecs in the libavcodec library. 
    video_codec: typing.Optional[typing.Optional[str]] = Field(None, alias='videoCodec')

    # The method used to compress and decompress digital audio for your video.
    audio_codec: typing.Optional[typing.Optional[str]] = Field(None, alias='audioCodec')

    aspect_ratio: typing.Optional[typing.Optional[str]] = Field(None, alias='aspectRatio')
    class Config:
        arbitrary_types_allowed = True
